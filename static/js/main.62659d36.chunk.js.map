{"version":3,"sources":["http-common.js","services/tutorial.service.js","components/add-tutorial.component.js","components/tutorial.component.js","components/tutorial-list.component.js","App.js","index.js"],"names":["axios","create","baseURL","headers","http","get","id","data","post","put","delete","title","AddTutorial","props","onChangeTitle","bind","onChangeDescription","saveTutorial","newTutorial","state","description","published","submitted","e","this","setState","target","value","TutorialDataService","then","response","console","log","catch","className","color","dismissible","outline","size","onClick","inline","floating","name","placeholder","type","required","onChange","for","Component","Tutorial","getTutorial","updateTutorial","updatePublished","deleteTutorial","currentTutorial","message","match","params","prevState","update","history","push","status","body","tag","pill","TutorialList","onChangeSearchTitle","retrieveTutorials","refreshList","setActiveTutorial","removeAllTutorials","searchTitle","tutorials","currentIndex","getAll","tutorial","index","deleteAll","findByTitle","inverse","map","to","App","href","exact","path","component","TutorialsList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.62659d36.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'http://localhost:8080/api',\r\n    headers:{\r\n        \"Content-type\":\"application/json\"\r\n    }\r\n});","import http from \"http-common\";\r\n\r\nclass TutorialDataService {\r\n  getAll() {\r\n    return http.get(\"/tutorials\");\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/tutorials/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/tutorials\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/tutorials/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/tutorials/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/tutorials\");\r\n  }\r\n\r\n  findByTitle(title) {\r\n    return http.get(`/tutorials?title=${title}`);\r\n  }\r\n}\r\n\r\nexport default new TutorialDataService();\r\n","import React, { Component } from \"react\";\r\nimport TutorialDataService from \"services/tutorial.service\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Button,\r\n  Label,\r\n  Card,\r\n  CardText,\r\n  CardTitle,\r\n  Alert,\r\n  Badge,\r\n} from \"reactstrap\";\r\n\r\nexport default class AddTutorial extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.saveTutorial = this.saveTutorial.bind(this);\r\n    this.newTutorial = this.newTutorial.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      title: \"\",\r\n      description: \"\",\r\n      published: false,\r\n\r\n      submitted: false,\r\n    };\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    this.setState({ title: e.target.value });\r\n  }\r\n  onChangeDescription(e) {\r\n    this.setState({ description: e.target.value });\r\n  }\r\n  saveTutorial() {\r\n    var data = {\r\n      title: this.state.title,\r\n      description: this.state.description,\r\n    };\r\n\r\n    TutorialDataService.create(data)\r\n      .then((response) => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          title: response.data.title,\r\n          description: response.data.description,\r\n          published: response.data.published,\r\n\r\n          submitted: true,\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n  newTutorial() {\r\n    this.setState({\r\n      id: null,\r\n      title: \"\",\r\n      description: \"\",\r\n      published: false,\r\n\r\n      submitted: false,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <Alert color=\"info\" dismissible>\r\n              Your Tutorial has been submitted\r\n            </Alert>\r\n            <div>\r\n              <Button color=\"info\" outline size=\"sm\" onClick={this.newTutorial}>\r\n                Add tutorial\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Form inline>\r\n              <FormGroup floating>\r\n                <Input\r\n                  id=\"title\"\r\n                  name=\"title\"\r\n                  placeholder=\"Title\"\r\n                  type=\"text\"\r\n                  required\r\n                  value={this.state.title}\r\n                  onChange={this.onChangeTitle}\r\n                />\r\n                <Label for=\"title\">Title</Label>\r\n              </FormGroup>{\" \"}\r\n              <FormGroup floating>\r\n                <Input\r\n                  id=\"desc\"\r\n                  name=\"desc\"\r\n                  placeholder=\"description\"\r\n                  type=\"text\"\r\n                  required\r\n                  value={this.state.description}\r\n                  onChange={this.onChangeDescription}\r\n                />\r\n                <Label for=\"desc\">Description</Label>\r\n              </FormGroup>{\" \"}\r\n              <Button color=\"success\" outline size=\"sm\" onClick={this.saveTutorial}>\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TutorialDataService from \"services/tutorial.service\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Button,\r\n  Label,\r\n  Card,\r\n  CardText,\r\n  CardTitle,\r\n  Alert,\r\n  Badge\r\n} from \"reactstrap\";\r\n\r\nexport default class Tutorial extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.getTutorial = this.getTutorial.bind(this);\r\n    this.updateTutorial = this.updateTutorial.bind(this);\r\n    this.updatePublished = this.updatePublished.bind(this);\r\n    this.deleteTutorial = this.deleteTutorial.bind(this);\r\n    this.state = {\r\n      currentTutorial: {\r\n        id: null,\r\n        title: \"\",\r\n        description: \"\",\r\n        published: false,\r\n      },\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTutorial(this.props.match.params.id);\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    const title = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentTutorial: {\r\n        ...prevState.currentTutorial,\r\n        title: title,\r\n      },\r\n    }));\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    const description = e.target.value;\r\n    this.setState((prevState) => ({\r\n      currentTutorial: {\r\n        ...prevState.currentTutorial,\r\n        description: description,\r\n      },\r\n    }));\r\n  }\r\n\r\n  getTutorial(id) {\r\n    TutorialDataService.get(id)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          currentTutorial: response.data,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateTutorial() {\r\n    TutorialDataService.update(\r\n      this.state.currentTutorial.id,\r\n      this.state.currentTutorial\r\n    )\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          message: \"Tutorial updated successfully\",\r\n        });\r\n        this.props.history.push(\"/tutorials\");\r\n      })\r\n      .then((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updatePublished(status) {\r\n    var data = {\r\n      id: this.state.currentTutorial.id,\r\n      title: this.state.currentTutorial.title,\r\n      description: this.state.currentTutorial.description,\r\n      published: status,\r\n    };\r\n\r\n    TutorialDataService.update(this.state.currentTutorial.id, data)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState((prevState) => ({\r\n          currentTutorial: {\r\n            ...prevState.currentTutorial,\r\n            published: status,\r\n          },\r\n        }));\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deleteTutorial() {\r\n    TutorialDataService.delete(this.state.currentTutorial.id)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        this.props.history.push(\"/tutorials\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentTutorial } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentTutorial ? (\r\n          <Card body color=\"warning\" outline>\r\n            <CardTitle tag=\"h5\">Tutorial</CardTitle>\r\n            <Form inline>\r\n              <FormGroup floating>\r\n                <Input\r\n                  id=\"title\"\r\n                  name=\"title\"\r\n                  placeholder=\"Title\"\r\n                  value={currentTutorial.title}\r\n                  onChange={this.onChangeTitle}\r\n                />\r\n                <Label for=\"title\">Title</Label>\r\n              </FormGroup>{\" \"}\r\n              <FormGroup floating>\r\n                <Input\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  placeholder=\"description\"\r\n                  value={currentTutorial.description}\r\n                  onChange={this.onChangeDescription}\r\n                />\r\n                <Label for=\"description\">Description</Label>\r\n              </FormGroup>{\" \"}\r\n              <FormGroup floating>\r\n                {currentTutorial.published ? (\r\n                  <div>\r\n                    <Badge color=\"success\" pill>\r\n                      Published\r\n                    </Badge>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <Badge color=\"danger\" pill>\r\n                      Not Published\r\n                    </Badge>\r\n                  </div>\r\n                )}\r\n              </FormGroup>{\" \"}\r\n            </Form>\r\n            <div>\r\n              {currentTutorial.published ? (\r\n                <Button\r\n                  onClick={() => this.updatePublished(false)}\r\n                  color=\"success\"\r\n                  outline\r\n                  size=\"sm\"\r\n                >\r\n                  UnPublish\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  onClick={() => this.updatePublished(true)}\r\n                  color=\"success\"\r\n                  outline\r\n                  size=\"sm\"\r\n                >\r\n                  Publish\r\n                </Button>\r\n              )}{\" \"}\r\n              <Button\r\n                onClick={this.deleteTutorial}\r\n                color=\"danger\"\r\n                outline\r\n                size=\"sm\"\r\n              >\r\n                Delete\r\n              </Button>{\" \"}\r\n              <Button\r\n                onClick={this.updateTutorial}\r\n                color=\"info\"\r\n                outline\r\n                size=\"sm\"\r\n              >\r\n                Update\r\n              </Button>{\" \"}\r\n            </div>\r\n            <p>{this.state.message}</p>\r\n          </Card>\r\n        ) : (\r\n          <Card body color=\"warning\" outline>\r\n            <CardTitle tag=\"h5\">Special Title Treatment</CardTitle>\r\n            <CardText>\r\n              With supporting text below as a natural lead-in to additional\r\n              content.\r\n            </CardText>\r\n            <Button>Button</Button>\r\n          </Card>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TutorialDataService from \"services/tutorial.service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  InputGroup,\r\n  Input,\r\n  Card,\r\n  CardText,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  CardBody,\r\n  Alert,\r\n  Badge,\r\n} from \"reactstrap\";\r\n\r\nexport default class TutorialList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\r\n    this.retrieveTutorials = this.retrieveTutorials.bind(this);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveTutorial = this.setActiveTutorial.bind(this);\r\n    this.removeAllTutorials = this.removeAllTutorials.bind(this);\r\n    this.searchTitle = this.searchTitle.bind(this);\r\n    this.state = {\r\n      tutorials: [],\r\n      currentTutorial: null,\r\n      currentIndex: -1,\r\n      searchTitle: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.retrieveTutorials();\r\n  }\r\n\r\n  onChangeSearchTitle(e) {\r\n    const searchTitle = e.target.value;\r\n    this.setState({\r\n      searchTitle: searchTitle,\r\n    });\r\n  }\r\n\r\n  retrieveTutorials() {\r\n    TutorialDataService.getAll()\r\n      .then((response) => {\r\n        this.setState({\r\n          tutorials: response.data,\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrieveTutorials();\r\n    this.setState({\r\n      currentTutorial: null,\r\n      currentIndex: -1,\r\n    });\r\n  }\r\n\r\n  setActiveTutorial(tutorial, index) {\r\n    this.setState({\r\n      currentTutorial: tutorial,\r\n      currentIndex: index,\r\n    });\r\n  }\r\n\r\n  removeAllTutorials() {\r\n    TutorialDataService.deleteAll()\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        this.refreshList();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  searchTitle() {\r\n    TutorialDataService.findByTitle(this.state.searchTitle)\r\n      .then((response) => {\r\n        this.setState({\r\n          tutorials: response.data,\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n  render() {\r\n    const { searchTitle, tutorials, currentTutorial, currentIndex } =\r\n      this.state;\r\n    return (\r\n      <div>\r\n        <Card color=\"warning\" inverse outline>\r\n          <CardBody>\r\n            <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\r\n              Tutorial List\r\n            </CardSubtitle>\r\n          </CardBody>\r\n        </Card>\r\n        <Card color=\"warning\" outline>\r\n          <CardBody>\r\n            <div className=\"list row\">\r\n              <div className=\"col-md-6\">\r\n                <ul className=\"list-group\">\r\n                  {tutorials &&\r\n                    tutorials.map((tutorial, index) => (\r\n                      <li\r\n                        className={\r\n                          \"list-group-item \" +\r\n                          (index === currentIndex ? \"active\" : \"\")\r\n                        }\r\n                        onClick={() => this.setActiveTutorial(tutorial, index)}\r\n                        key={index}\r\n                      >\r\n                        <div>\r\n                          <Badge color=\"info\" pill>\r\n                            {tutorial.title}\r\n                          </Badge>{\" \"}\r\n                          <Badge color=\"info\" pill>\r\n                            {tutorial.description}\r\n                          </Badge>\r\n                        </div>\r\n                      </li>\r\n                    ))}\r\n                </ul>\r\n\r\n                <Button\r\n                  color=\"danger\"\r\n                  outline\r\n                  onClick={this.removeAllTutorials}\r\n                >\r\n                  Remove All\r\n                </Button>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                {currentTutorial ? (\r\n                  <Card body color=\"warning\" outline>\r\n                    <CardTitle tag=\"h5\">Tutorial</CardTitle>\r\n                    <CardText>\r\n                      <label>\r\n                        <strong>Title:</strong>\r\n                      </label>{\" \"}\r\n                      {currentTutorial.title}\r\n                    </CardText>\r\n                    <CardText>\r\n                      <label>\r\n                        <strong>Description:</strong>\r\n                      </label>{\" \"}\r\n                      {currentTutorial.description}\r\n                    </CardText>\r\n                    <CardText>\r\n                      <label>\r\n                        <strong>Status:</strong>\r\n                      </label>{\" \"}\r\n                      {currentTutorial.published ? \"Published\" : \"Pending\"}\r\n                    </CardText>\r\n                    <CardText>\r\n                      <Link\r\n                        to={\"/tutorials/\" + currentTutorial.id}\r\n                        className=\"nav-link\"\r\n                      >\r\n                        Edit\r\n                      </Link>\r\n                    </CardText>\r\n                  </Card>\r\n                ) : (\r\n                  <Alert color=\"warning\">Please select a tutorial ....</Alert>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { Link } from \"react-router-dom\";\nimport { Switch } from \"react-router-dom\";\nimport { Route } from \"react-router-dom\";\n\nimport AddTutorial from \"components/add-tutorial.component\";\nimport Tutorial from \"components/tutorial.component\";\nimport TutorialsList from \"components/tutorial-list.component\";\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <a href=\"/tutorials\" className=\"navbar-brand\">\n            Shark\n          </a>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/tutorials\"} className=\"nav-link\">\n                Tutorials\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/add\"} className=\"nav-link\">\n                Add\n              </Link>\n            </li>\n          </div>\n        </nav>\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/tutorials\"]} component={TutorialsList} />\n            <Route exact path=\"/add\" component={AddTutorial} />\n            <Route path=\"/tutorials/:id\" component={Tutorial} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"App\";\n//import * as serviceWorker from \"\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n//serviceWorker.unregister();\n"],"sourceRoot":""}